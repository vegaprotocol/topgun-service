---

kind: pipeline
name: default
type: docker

platform:
  arch: amd64
  os: linux

steps:

  # ====== Pipeline for pull requests ======

  - name: build-PR
    image: docker.pkg.github.com/vegaprotocol/devops-infra/cipipeline:1.16.2
    pull: always
    volumes:
      - name: gocache
        path: /go/cache
      - name: gopkg
        path: /go/pkg
    environment:
      GO111MODULE: "on"
      GOCACHE: /go/cache
    commands:
      # Get a list of files that changed in this PR, in order to limit CI to only test things that
      # changed in this PR.
      - git diff --name-only "$$DRONE_COMMIT_BEFORE...$$DRONE_COMMIT_AFTER" >git_diff.txt
      - if test "$$DRONE_TARGET_BRANCH" = master -o "$$(grep -cE '(^go.(mod|sum)|\.go)$$' git_diff.txt)" -gt 0 ; then
          echo "Building executable" ;
          make build || exit 1 ;
        else
          echo "No Go files changed. Skipping building of binary." ;
          rm -f ./topgun-service ;
        fi
    depends_on: []
    when:
      event:
        - pull_request

  # ====== Pipeline for main branches (master, develop) and tags ======

  - name: publish_docker
    image: docker.pkg.github.com/vegaprotocol/devops-infra/cipipeline-docker:18.09.9
    volumes:
      - name: dockersock
        path: /run/docker.sock
    environment:
      DOCKER_HOST: unix:///run/docker.sock
      DOCKER_CONFIG_JSON:
        from_secret: dockerconfig
      img: docker.pkg.github.com/vegaprotocol/topgun-service/topgun-service
    commands:
      - tmptag="$$(openssl rand -hex 10)"
      - docker build -t "$$img:$$tmptag" .
      - mkdir -p "$$HOME/.docker" ; echo "$$DOCKER_CONFIG_JSON" >"$$HOME/.docker/config.json" ; unset DOCKER_CONFIG_JSON
      - if test -n "$$DRONE_TAG" ; then
          docker tag "$$img:$$tmptag" "$$img:$$DRONE_TAG" ;
          docker push "$$img:$$DRONE_TAG" ;
        fi
      - if test -n "$$DRONE_BRANCH" ; then
          sanitised_branch="$$(echo -n "$$DRONE_BRANCH" | tr -c 'A-Za-z0-9._' '-')" ;
          docker tag "$$img:$$tmptag" "$$img:$$sanitised_branch" ;
          docker push "$$img:$$sanitised_branch" ;
        fi
      - docker rmi "$$img:$$tmptag"
    depends_on: []
    when:
      ref:
        - refs/heads/master
        - refs/heads/develop
        - refs/tags/*

  - name: deploy
    image: docker.pkg.github.com/vegaprotocol/devops-infra/cipipeline:latest
    volumes: []
    environment:
      DEPLOY_SSH_PRIVKEY:
        from_secret: DEPLOY_SSH_PRIVKEY
      DEPLOY_SSH_KNOWNHOSTS:
        from_secret: DEPLOY_SSH_KNOWNHOSTS
    commands:
      - mkdir -p -m 0700 ~/.ssh
      - if ! echo "$${DEPLOY_SSH_PRIVKEY}" | grep -q "BEGIN [A-Z]* PRIVATE KEY" ; then
          echo "Need env var DEPLOY_SSH_PRIVKEY to have a private key" ; exit 1 ; fi
      - if ! echo "$${DEPLOY_SSH_KNOWNHOSTS}" | grep -q ssh-rsa ; then
          echo "Need env var DEPLOY_SSH_KNOWNHOSTS to have one or more host keys" ; exit 1 ; fi
      - echo "$${DEPLOY_SSH_PRIVKEY}" >~/.ssh/id_rsa ; chmod 0600 ~/.ssh/id_rsa
      - echo "$${DEPLOY_SSH_KNOWNHOSTS}" >~/.ssh/known_hosts ; chmod 0644 ~/.ssh/known_hosts
      - unset DEPLOY_SSH_KNOWNHOSTS DEPLOY_SSH_PRIVKEY
      - ssh dockerrunner@rd.vega.xyz /home/dockerrunner/bin/topgun-service.sh "$$DRONE_BRANCH"
    depends_on:
      - publish_docker
    when:
      ref:
        - refs/heads/master
        - refs/heads/develop

volumes:
  - name: dockersock
    host:
      path: /run/docker.sock
  - name: gocache
    host:
      path: /var/lib/drone/volumes/topgun-service/gocache
  - name: gopkg
    host:
      path: /var/lib/drone/volumes/topgun-service/gopkg

image_pull_secrets:
  - dockerconfig
